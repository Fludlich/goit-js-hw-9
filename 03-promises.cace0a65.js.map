{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAMF,SAASC,cAAc,UAG/BE,EAAS,GA6Bb,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACvCC,YAAW,WACNN,EACFI,EAAQ,CAACG,SAAUT,EAAUU,MAAOT,IAIpCM,EAAO,CAACE,SAAUT,EAAUU,MAAOT,G,GAElCU,OAAOb,EAAQY,OAAOC,OAAOV,GAAOU,OAAOX,G,IAI/CY,MAAK,SAAAC,G,IAAGJ,EAAQI,EAARJ,SAAUC,EAAKG,EAALH,MACnBlB,EAAAsB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAqCO,OAA/BL,OAAOD,GAAOC,OAAOF,GAAU,M,IAGrFQ,OAAM,SAAAJ,G,IAAGJ,EAAQI,EAARJ,SAAUC,EAAKG,EAALH,MACpBlB,EAAAsB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAqCO,OAA/BL,OAAOD,GAAOC,OAAOF,GAAU,M,IA9CnFZ,EAAIsB,iBAAiB,SAErB,SAAmBC,GAClBA,EAAMC,iBAcP,WACE,IAAK,IAAIC,EAAQ,EAAGA,GAASxB,EAAQyB,OAAQD,IAE3CvB,EAAcuB,EAAOxB,EAAQ0B,K,CAfhCC,GACDjB,YAAW,WACTV,EAAQ,GACRJ,EAAKgC,O,GACL,I,IAIFhC,EAAKyB,iBAAiB,SAAS,SAACC,GAC9BtB,EAAQsB,EAAMO,OAAOC,MAAMR,EAAMO,OAAOE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form')\nconst btn = document.querySelector('button')\n\n\nlet storage ={}\n\n\nbtn.addEventListener('click', onSubmit)\n\nfunction onSubmit (event){\n event.preventDefault()\n\n quantity()\nsetTimeout(()=>{\n  storage={}\n  form.reset()\n},1000)\n\n}\n\nform.addEventListener('input', (event)=>{\n  storage[event.target.name]=event.target.value\n})\n\nfunction quantity (){\n  for (let index = 1; index <= storage.amount; index++) {\n\n    createPromise(index, storage.step)\n  }\n}\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n setTimeout(()=>{\n  if (shouldResolve) {\n    resolve({position: position, delay: delay})\n\n  } else {\n\n    reject({position: position, delay: delay})\n  }\n }, (Number(storage.delay)+Number(delay)*Number(position)))\n})\n\npromise\n.then(({ position, delay }) => {\nNotify.success(`✅ Fulfilled promise ${position} in ${Number(delay)*Number(position)}ms`);\n})\n\n.catch(({ position, delay }) => {\nNotify.failure(`❌ Rejected promise ${position} in ${Number(delay)*Number(position)}ms`);\n});\n}\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$storage","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","Number","then","param","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","index","amount","step","$ce04d3a99e08e73b$var$quantity","reset","target","name","value"],"version":3,"file":"03-promises.cace0a65.js.map"}