{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAMF,SAASC,cAAc,UAE/BE,EAAU,GAqBd,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAUT,EAAUU,MAAOT,IAErCM,EAAO,CAAEE,SAAUT,EAAUU,MAAOT,G,GAErCU,OAAOb,EAAQY,OAAUC,OAAOV,GAASU,OAAOX,G,IAIlDY,MAAK,SAAAC,G,IAAGJ,EAAQI,EAARJ,SAAUC,EAAKG,EAALH,MACjBlB,EAAAsB,OAAOC,QACL,uBACIC,OADqBP,EAAS,QAEjCO,OADCL,OAAQD,GAASC,SAASF,GAAWE,OAAOb,EAAQY,OACrD,M,IAIJO,OAAM,SAAAJ,G,IAAGJ,EAAQI,EAARJ,SAAUC,EAAKG,EAALH,MAClBlB,EAAAsB,OAAOI,QACL,sBACEF,OADoBP,EAAS,QAE9BO,OADCL,OAAOD,GAASC,SAASF,GAAUE,OAAOb,EAAQY,OACnD,M,IA5CTb,EAAIsB,iBAAiB,SAErB,SAAkBC,GAChBA,EAAMC,iBAUR,WACE,IAAK,IAAIC,EAAQ,EAAGA,GAASxB,EAAQyB,OAAQD,IAC3CvB,EAAcuB,EAAOxB,EAAQ0B,K,CAV/BC,GACA/B,EAAKgC,O,IAGPhC,EAAKyB,iBAAiB,SAAS,SAAAC,GAC7BtB,EAAQsB,EAAMO,OAAOC,MAAQR,EAAMO,OAAOE,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('button');\n\nlet storage = {};\n\nbtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  quantity();\n  form.reset();\n}\n\nform.addEventListener('input', event => {\n  storage[event.target.name] = event.target.value;\n});\n\nfunction quantity() {\n  for (let index = 1; index <= storage.amount; index++) {\n    createPromise(index, storage.step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, Number(storage.delay) +( Number(delay) * Number(position)));\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(\n        `✅ Fulfilled promise ${position} in ${\n          (Number(delay) * Number(--position))+Number(storage.delay)\n        }ms`\n      );\n    })\n\n    .catch(({ position, delay }) => {\n      Notify.failure(\n        `❌ Rejected promise ${position} in ${\n          Number(delay) * Number(--position)+Number(storage.delay)\n        }ms`\n      );\n    });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$btn","$ce04d3a99e08e73b$var$storage","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","Number","then","param","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","index","amount","step","$ce04d3a99e08e73b$var$quantity","reset","target","name","value"],"version":3,"file":"03-promises.ebae6c7a.js.map"}