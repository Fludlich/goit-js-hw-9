{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAMF,SAASC,cAAc,UAEnC,IAAIE,EAAU,GAqBd,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAUT,EAAUU,MAAOT,IAErCM,EAAO,CAAEE,SAAUT,EAAUU,MAAOT,GAAQ,GAE7CU,OAAOb,EAAQY,OAAUC,OAAOV,GAASU,OAAOX,GAAW,IAI7DY,MAAK,EAACH,SAAEA,EAAQC,MAAEA,MACjBlB,EAAAqB,OAAOC,QACL,uBAAqBL,QAAiBE,OACnCD,GAAaC,SAAUF,GAAWE,OAAEb,EAAOY,WAC3C,IAINK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBlB,EAAAqB,OAAOG,QACL,sBAAoBP,QAAeE,OACjCD,GAAaC,SAAUF,GAAWE,OAACb,EAAOY,WACzC,G,CA5CXb,EAAIoB,iBAAiB,SAErB,SAAkBC,GAChBA,EAAMC,iBAUR,WACE,IAAK,IAAIC,EAAQ,EAAGA,GAAStB,EAAQuB,OAAQD,IAC3CrB,EAAcqB,EAAOtB,EAAQwB,K,CAV/BC,GACA7B,EAAK8B,O,IAGP9B,EAAKuB,iBAAiB,SAASC,IAC7BpB,EAAQoB,EAAMO,OAAOC,MAAQR,EAAMO,OAAOE,KAAK","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('button');\n\nlet storage = {};\n\nbtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n\n  quantity();\n  form.reset();\n}\n\nform.addEventListener('input', event => {\n  storage[event.target.name] = event.target.value;\n});\n\nfunction quantity() {\n  for (let index = 1; index <= storage.amount; index++) {\n    createPromise(index, storage.step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, Number(storage.delay) +( Number(delay) * Number(position)));\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(\n        `✅ Fulfilled promise ${position} in ${\n          (Number(delay) * Number(--position))+Number(storage.delay)\n        }ms`\n      );\n    })\n\n    .catch(({ position, delay }) => {\n      Notify.failure(\n        `❌ Rejected promise ${position} in ${\n          Number(delay) * Number(--position)+Number(storage.delay)\n        }ms`\n      );\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$btn","$47d4ff9957288465$var$storage","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","Number","then","Notify","success","catch","failure","addEventListener","event","preventDefault","index","amount","step","$47d4ff9957288465$var$quantity","reset","target","name","value"],"version":3,"file":"03-promises.8fddec7d.js.map"}